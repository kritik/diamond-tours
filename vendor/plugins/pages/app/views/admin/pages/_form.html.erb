<%= error_messages_for :page %>

<% form_for [:admin, @page] do |f| %>
  <div class='field'>
    <%= f.label :title %>
    <%= f.text_field :title, :class => "larger", :style => 'width: 954px' %>
  </div>
  <div class='clearfix'>
    <div class='clearfix'>
      <ul id='page_parts'>
      <% @page.parts.each do |p| %>
        <li class='tab<%= " active" if @page.parts.index(p) == 0 %>'>
          <%= link_to p.title.titleize, "#part_#{p.title}" %>
        </li>
      <% end %>
      </ul>
      <% if RefinerySetting.find_or_set(:new_page_parts, false) %>
        <ul id='page_parts_controls'>
          <li>
            <%= link_to refinery_icon_tag("add.png"), "#", :id => "add_page_part", :title => "Create Content Section" %>
          </li>
          <li>
            <%= link_to(refinery_icon_tag("delete.png"), "#", :title => 'Delete content section', :class => 'delete_page_part', :name => "Delete Content Section", :id => "delete_page_part") %>
          </li>
        </ul>
      <% end %>
    </div>

    <div id='page_part_editors'>
      <% part_index = -1 %>
      <% f.fields_for :parts do |p| %>
        <%= render :partial => "page_part_field", :locals => {:title => p.object.title, :body => p.object.body, :part_index => (part_index += 1), :new_part => @page.new_record?} %>
      <% end %>
    </div>
  </div>
  <p>
    <%= link_to "&raquo; Hide/Show Advanced Options", "", :id => "toggle_advanced_options",
          :rel => "Click to access meta tag settings and menu options" %>
  </p>
  <div id='more_options' style="display:none;">
    <div class='field'>
      <%= label_tag :custom_title %>
      <%= label_tag "", 'Type:', :class => "stripped" %>
      <% ["none", "text", "image"].each do |type| %>
        <%= f.radio_button :custom_title_type, "#{type}" %>
        <%= label_tag "page_custom_title_type_#{type}", "#{type.titleize}", :class => "stripped" %>
      <% end %>
      <br/>
      <div id='custom_title_none'></div>
      <div id='custom_title_text' style='display: <%= @page.custom_title_type == 'text' ? 'block' : 'none' %>'>
        <p>
          <%= f.text_field :custom_title, {:size => 103} %><br/>
          <small>
            If you want the page to have a different title than the one that shows in the menu and browser title then enter it here.<br/>
          </small>
        </p>
      </div>
      <div id='custom_title_image' style='display: <%= @page.custom_title_type == 'image' ? 'block' : 'none' %>' class='clearfix'>
        <%= render :partial => "/shared/admin/image_picker", :locals =>
          {
            :f => f,
            :field => :custom_title_image_id,
            :image => @page.custom_title_image,
            :toggle_image_display => false
          }
        %>
      </div>
    </div>
    <div class='field'>
      <%= label_tag :skip_to_first_child? %>
      <%= f.check_box :skip_to_first_child %>
      <%= f.label :skip_to_first_child, "Check this box if you want the visitor to be redirected to this page's first child page if this page is selected.", :class => "stripped" %>
    </div>
    <div class='field'>
      <%= f.label :link_url, "Custom URL" %>
      <%= f.text_field :link_url, {:size => 103} %><br/>
      <small>
        Enter a URL if this page links to an external site or to a pre-existing resource e.g. a contact page.
        <br/>
        Note: This URL must point to a location that exists; a new one will not be created.
      </small>
    </div>
    <h2>Search Engine Optimization</h2>
    <div class='field'>
      <%= f.label :browser_title %>
      <%= f.text_field :browser_title, :size => 63 %><br/>
      <small>
        If you want to override the default browser title, do it here.
      </small>
    </div>
    <div class='field'>
      <%= f.label :meta_keywords %>
      <%= f.text_field :meta_keywords, :size => 63 %><br/>
      <small>
        Enter 5-10 keywords that relate to this page. Separate keywords by a comma.
      </small>
    </div>
    <div class='field'>
      <%= f.label :meta_description %>
      <%= f.text_area :meta_description, :cols => 95, :rows => 3 %><br/>
      <small>
        Enter a concise two or three sentences describing what this page is about.
      </small>
    </div>
    <div class='field'>
      <%= f.label :show_in_menu %>
      <%= f.check_box :show_in_menu %>
      <small>
        <%= f.label :show_in_menu, "Check this box if this page should appear in the site menu" %>
      </small>
    </div>
  </div>
  <div class='field'>
    <label>Draft</label>
    <%= f.check_box :draft %>
    <%= f.label :draft, "Save as Draft", :class => "stripped" %>
  </div>
  <%= render :partial => "/shared/admin/form_actions", :locals => {:f => f, :continue_editing => true} %>
  <div id='new_page_part_dialog' style='display: none'>
    <div class='field'>
      <label for='new_page_part_title'>Title</label>
      <input id='new_page_part_title' value='' class='larger' size='40' />
      <input id='new_page_part_index' type='hidden' value='<%= @page.parts.size %>' />
    </div>
    <div id='dialog-form-actions' class='form-actions'>
      <%= f.submit 'Save', :id => "new_page_part_save" %>
      or
      <%= link_to "Cancel", "", :id => "new_page_part_cancel", :class => "close_dialog" %>
    </div>
  </div>
<% end %>
<% content_for :head do %>
<script type='text/javascript'>
  switch_custom_title_type = function(type)
  {
    $('custom_title_text').hide();
    $('custom_title_image').hide();

    $('custom_title_' + type).show();
  }

  FastInit.addOnLoad(function(){
    $('toggle_advanced_options').observe('click', function(e)
    {
      $('more_options').toggle();
      e.preventDefault();
    });

    $$('input[type=radio]').each(function(radio)
    {
      if (radio.name == 'page[custom_title_type]')
      {
        radio.observe('change', function(e)
        {
          switch_custom_title_type(this.value);
        });
      }
    });

<% if RefinerySetting.find_or_set(:new_page_parts, false) %>
    $('add_page_part').observe('click', function(e) {
      tb_show('Create Content Section', '#?auto_size_content=true&draggable=true&titlebar=true&inlineId=new_page_part_dialog&TB_inline=true&modal=true');

      e.preventDefault();
    });

    $('new_page_part_save').observe('click', function(e) {
      if ((part_title = $('new_page_part_title').value).length > 0) {
        tab_title = part_title.toLowerCase().gsub(" ", "_");
        if ($$('#part_' + tab_title).size() == 0) {
          // first get the response from the server
          new Ajax.Request("<%= new_admin_page_part_url %>", {
              asynchronous: true
            ,  method: 'get'
            ,  parameters: {
              title: tab_title
              , part_index: $('new_page_part_index').value
              , body: ''
            }
            , onComplete: function(e){
              $('page_part_editors').insert(e.transport.responseText , {position: 'bottom'});
              // Add a new tab for the new content section.
              $$('#page_parts').first().insert((new Element("li").addClassName("tab").insert(new Element("a", {href: "#part_" + tab_title}).update(part_title))));

              // turn the new textarea into a wymeditor.
              jQuery('#page_parts_attributes_' + $('new_page_part_index').value + "_body").wymeditor(wymeditor_boot_options);

              // Wipe the title and increment the index counter by one.
              $('new_page_part_index').value = (parseInt($('new_page_part_index').value) + 1);
              $('new_page_part_title').value = "";
            }
          });

          tb_remove();
        }  else {
          alert("A content section with that title already exists, please choose another.");
        }
      } else {
        alert("You have not entered a title for the content section, please enter one.");
      }
    });

    $('new_page_part_cancel').observe('click', function(e) {
      $('new_page_part_title').value = "";
      tb_remove();
      e.preventDefault();
    });

    $('delete_page_part').observe('click', function(e) {
      selected_part_link = $$('#page_parts li.active a').first();
      part_container = $(selected_part_link.getAttribute('href').gsub("#", ""));
      result = confirm("This will remove the content section '" + selected_part_link.innerHTML + "' when the page is saved and erase all content that has been entered into it, Are you sure?");
      if (result) {
        if ((part_id = $(part_container.down('textarea').id.gsub('_body', '_id'))) != null) {
          new Ajax.Request("<%= admin_page_parts_url %>/" + part_id.value, {
            asynchronous: true
            ,  method: "DELETE"
            , parameters:
            {
              authenticity_token: $$('input[name=authenticity_token]').first().value
            }
          });
        }

        // remove actual elements from DOM.
        part_container.remove();
        selected_part_link.up('li').remove();

        WYMeditor.loaded();
      }

      e.preventDefault();
    });
<% end %>
  });

  // Hook into the loaded function. This will be called when WYMeditor has done its thing.
  WYMeditor.loaded = function()
  {
    new Control.Tabs('page_parts', {setClassOnContainer: true}).first();
  }

</script>
<% end %>
